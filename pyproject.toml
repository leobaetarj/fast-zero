[tool.poetry]
name = "fast-zero"
version = "0.1.0"
description = ""
authors = ["Leonardo BaÃªta <leobaetarj@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.0"
uvicorn = "^0.23.2"
pydantic = {extras = ["email"], version = "^2.4.2"}
dependency-injector = "^4.41.0"
sqlalchemy = "^2.0.22"
pydantic-settings = "^2.0.3"
alembic = "^1.12.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
taskipy = "^1.12.0"
blue = "^0.9.1"
ruff = "^0.1.2"
httpx = "^0.25.0"
isort = "^5.12.0"
pytest-mock = "^3.12.0"
pylint = "^3.0.2"
pre-commit = "^3.5.0"

[tool.ruff]
line-length = 79
exclude = ['.venv', 'migrations']

[tool.isort]
profile = "black"
line_length = 79
extend_skip = ['migrations']

[tool.pytest.ini_options]
pythonpath = "."

[tool.blue]
extend-exclude = '(migrations/)'

[tool.taskipy.tasks]
lint = 'ruff . && blue --check . --diff --exclude migrations'
format = 'blue .  && isort .'
run = 'uvicorn src.application.app:app --reload'
pre_test = 'task lint'
test-cov = 'pytest -s -x --cov=src/ -vv'
test = 'pytest -s -x -vv'
post_test = 'coverage html'
clean = 'find . | grep -E "(__pycache__|\.pyc$)" | xargs rm -rf'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
